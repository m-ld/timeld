@startuml
'https://plantuml.com/class-diagram

hide circle
allowmixing

class Gateway <<domain>> <<ably app>> <<service>> {
  appMasterKey <<secret>>
}

Gateway *-- "*" Account

class Account <<abstract>> <<subject>> {
  vf:primaryAccountable : UserAccount [1..*]
  timesheet : IRI [*]
  project : Project [*]
}
note left of Account::vf:primaryAccountable
  The account "owner".
  For user accounts, a
    redundant self-reference.
  For org accounts,
    "admin" user accounts.
  Not necessarily redundant
    with foaf:member
end note

Account *--> "*" Timesheet: owns

Account "client" *--> "*" Project: owns

class UserAccount {
  email : string [*]
  keyid : string [*]
}
note left of UserAccount::email
  Registered email, used
  for account activation
end note
note left of UserAccount::keyid
  Matches ""ably.key""
  Can be revoked
end note
UserAccount --|> Account

class OrganisationAccount {
  foaf:member : UserAccount [*]
}
note left of OrganisationAccount::foaf:member
  Only user accounts:
  no org hierarchy.
  Used for project-based
  authorisation.
end note
OrganisationAccount --|> Account
OrganisationAccount o-- "1..*" UserAccount

class Timesheet <<domain>> <<subject>> {
  //account<sub>t</sub> : Account//
  project : Project [*]
}
note left of Timesheet
  a subject in the
  Gateway domain;
  also a domain shared to
  authorised CLI clients
end note
note right of Timesheet::account
  entailed from
  Account.timesheet
end note
note right of Timesheet::project
  Can only be set by
  account owner/admin
end note

class Project <<subject>> {
  vf:provider : IRI [*]
  client : IRI [0..1]
}
note left of Project::vf:provider
  Typically singular.
  A provider has access
  to all timesheets in
  the project.
end note

Project "*" -- "*" Timesheet

component CLI [
  CLI

  ---
  ably.key <<secret>>
  account<sub>u</sub> (aka user)
  timesheets : domain [*]
]
note top of CLI
  Installed on a device
  under an OS account.
  Registered to user account
  via ably.key.
end note

UserAccount .. "*" CLI

CLI ..> "*" Timesheet: entailed access to timesheet
note bottom on link
  let projectAccessors ==
    λp:Project ⦁ p.vf:provider ∪ p.client;
  account<sub>u</sub> ∈
    account<sub>t</sub>.vf:primaryAccountable
  ∨
  ∃p:timesheet.project ⦁
    account<sub>u</sub> ∈ projectAccessors(p)
    ∨
    ∃org:OrganisationAccount ⦁
      account<sub>u</sub> ∈ org.foaf:member ∧
      org ∈ projectAccessors(p)
end note

package Ably <<service>> {
  class AblyKey {
    keyid
    name
    secret
    capabilities : string
  }
  note left of AblyKey::name
    account<sub>u</sub>
  end note
  note left of AblyKey::capabilities
    Defines channel access
    thus, timesheet access
  end note

  UserAccount "1" -- "*" AblyKey
}

@enduml