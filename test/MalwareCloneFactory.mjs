import IoCloneFactory from 'timeld-common/ext/socket.io/IoCloneFactory.mjs';
import { MemoryLevel } from 'memory-level';
import TimeldApp from 'timeld-common/lib/TimeldApp.mjs';

export class MalwareCloneFactory extends IoCloneFactory {
  /**
   * @param {string} [address]
   * @param {boolean} [disablePermissions]
   */
  constructor({ address, disablePermissions } = {}) {
    super();
    this.address = address;
    this.disablePermissions = disablePermissions;
  }

  async clone(config, dataDir, principal) {
    const clone = await super.clone(config, dataDir, principal);
    await clone.status.becomes({ outdated: false });
    return clone;
  }

  backend(dataDir) {
    return new MemoryLevel();
  }

  app(domainName, principal) {
    if (this.disablePermissions) {
      return new class extends TimeldApp {
        async checkProvider(entry, principal) {}
      }(domainName, principal);
    }
    return super.app(domainName, principal);
  }
}